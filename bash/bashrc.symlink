# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

xhost +local:root > /dev/null 2>&1 # sudo & X magic 

# sets bash completion
complete -cf sudo

shopt -s autocd		# automatically cd's to path entered at the prompt   
shopt -s cdspell 	# corrects minor spelling errors in when using cd
shopt -s checkwinsize 	# as the name says - after each bash command
shopt -s cmdhist 	# attempts to save multiple line commands in the history
shopt -s dotglob 	# includes <.dot> files in file name expansion if poss'
shopt -s expand_aliases # aliases are expanded
shopt -s extglob	# the extended pattern matching enabled
shopt -s histappend 	# history from exited shell kept for next open shell 
shopt -s hostcomplete 	# host name completion when @ is in the word
shopt -s nocaseglob 	# case-insensitive when performing filename expansion

export HISTSIZE=100000	# sets the size of the .bash_history file
export HISTFILESIZE=${HISTSIZE}
export HISTCONTROL=ignoreboth # don't put duplicate lines or lines starting with space in the history.
export EDITOR=/usr/bin/vim
export PATH=$PATH
export DISPLAY=:0.0

#-------------------------------
# aliases
#-------------------------------
alias ls='ls --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
alias ll='ls -l --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
alias la='ls -la --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F'
alias grep='grep --color=tty -d skip'
alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias freemem="free -m; sync; sudo bash -c 'echo 3 > /proc/sys/vm/drop_caches'; free -m"
alias np='nano PKGBUILD'
alias a="alsamixer"
alias gparted="sudo gparted"
alias grubup="sudo update-grub"
alias src="source .bashrc"

# package Management:

# quick call for vim & major conf files:
alias fstab="sudo vim /etc/fstab"
alias bashrc="vim ~/.bashrc"
alias rc.local="sudo vim /etc/rc.local"		# where I can call files during the boot process
alias hosts="sudo vim /etc/hosts"
alias hdeny="sudo vim /etc/hosts.deny"
alias hallow="sudo vim /etc/hosts.allow"

# GPU stuff:
alias gl="glxinfo | grep -i opengl && glxgears"

# CPU stuff
alias clockspeed="watch grep \"cpu MHz\" /proc/cpuinfo"

#-------------------------------
# functions
#-------------------------------

# ex - archive extractor
# usage: ex <file>
ex () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# type "path" in terminal for ordered $PATH display
function path(){
  old=$IFS
  IFS=:
  printf "%s\n" $PATH
  IFS=$old
}

# add directory to $PATH if it's not already there
pathadd() {
  if [ -d "$1" ] && [[ ":$PATH:" != *":$1:"* ]]; then
    PATH="${PATH:+"$PATH:"}$1"
  fi
}

# cd & ls in one
cl() {
  if [ -d "$1" ]; then
    cd "$1"
    ls -la --group-directories-first --time-style=+"%d.%m.%Y %H:%M" --color=auto -F   
  else
    echo "bash: cl: '$1': Directory not found"
  fi
}

# cd and ls & more in one
cm() {
  if [ -d "$1" ]; then
    cd "$1"
    ls | more
  else
    echo "bash: cl: '$1': Directory not found"
  fi
}

# search history of typed commands
hs() {
  fc -l 1 ${HISTSIZE} | grep "$1"
}

#-------------------------------
# command prompt layout & other
#-------------------------------

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# colored man pages
man() {
  env LESS_TERMCAP_mb=$'\E[01;31m' \
  LESS_TERMCAP_md=$'\E[01;38;5;74m' \
  LESS_TERMCAP_me=$'\E[0m' \
  LESS_TERMCAP_se=$'\E[0m' \
  LESS_TERMCAP_so=$'\E[38;5;246m' \
  LESS_TERMCAP_ue=$'\E[0m' \
  LESS_TERMCAP_us=$'\E[04;38;5;146m' \
  man "$@"
}

